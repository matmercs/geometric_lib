def area(a, h):
    """
    Вычисляет площадь треугольника по основанию и высоте.

    Параметры:
    a (float): Длина основания треугольника.
    h (float): Высота треугольника.

    Возвращает:
    float: Площадь треугольника.

    Пример:
    > area(10, 5)
    25.0
    """
    return a * h / 2


def perimeter(a, b, c):
    """
    Вычисляет периметр треугольника.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    float: Периметр треугольника.

    Пример:
    > perimeter(3, 4, 5)
    12
    """
    return a + b + c


def semi_perimeter(a, b, c):
    """
    Вычисляет полупериметр треугольника.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    float: Полупериметр треугольника.

    Пример:
    > semi_perimeter(3, 4, 5)
    6.0
    """
    return perimeter(a, b, c) / 2


def heron_area(a, b, c):
    """
    Вычисляет площадь треугольника по формуле Герона.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    float: Площадь треугольника.

    Пример:
    > heron_area(3, 4, 5)
    6.0
    """
    p = semi_perimeter(a, b, c)
    return (p * (p - a) * (p - b) * (p - c)) ** 0.5


def is_valid_triangle(a, b, c):
    """
    Проверяет, может ли треугольник с заданными сторонами существовать.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    bool: True, если треугольник существует, иначе False.

    Пример:
    > is_valid_triangle(3, 4, 5)
    True

    > is_valid_triangle(1, 2, 10)
    False
    """
    return a + b > c and a + c > b and b + c > a


def circumscribed_circle_radius(a, b, c):
    """
    Вычисляет радиус описанной окружности треугольника.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    float: Радиус описанной окружности.

    Пример:
    > circumscribed_circle_radius(3, 4, 5)
    2.5
    """
    return (a * b * c) / (4 * heron_area(a, b, c))


def inscribed_circle_radius(a, b, c):
    """
    Вычисляет радиус вписанной окружности треугольника.

    Параметры:
    a (float): Длина первой стороны.
    b (float): Длина второй стороны.
    c (float): Длина третьей стороны.

    Возвращает:
    float: Радиус вписанной окружности.

    Пример:
    > inscribed_circle_radius(3, 4, 5)
    1.0
    """
    p = semi_perimeter(a, b, c)
    return heron_area(a, b, c) / p
